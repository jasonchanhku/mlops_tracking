# name: mlops-classification
# on: [push]
# jobs:
#   classification-job:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.x'
#       - uses: iterative/setup-cml@v1
#       - uses: iterative/setup-dvc@v1
#       - uses: actions/setup-node@v1
#         with:
#           node-version: '16'
#       - name: Train model
#         env:
#           REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           # Your ML workflow goes here
#           pip install -r requirements.txt
#           dvc repro
          
#           git fetch --prune
          
#           dvc metrics diff master --show-md >> report.md
#           echo -e "\n ## ROC Graph" >> report.md
#           echo "![](./ROC.png)" >> report.md
          
#           cml comment create report.md

name: CML & DVC
on: [push]
jobs:
  train-and-report:
    runs-on: ubuntu-latest
    # container: docker://ghcr.io/iterative/cml:0-dvc2-base1
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - uses: iterative/setup-cml@v1
      - uses: iterative/setup-dvc@v1
      - name: Train model
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          pip install -r requirements.txt  # Install dependencies
          dvc pull data --run-cache        # Pull data & run-cache from S3
          dvc repro                        # Reproduce pipeline
      - name: Create CML report
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "## Metrics: workflow vs. main" >> report.md
          git fetch --depth=1 origin main:main

          dvc metrics diff master --show-md >> report.md
          cml comment create report.md
